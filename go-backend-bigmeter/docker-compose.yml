services:
  postgres:
    image: postgres:17.5-alpine3.20
    container_name: bigmeter_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-bigmeter}
      TZ: Asia/Bangkok
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 10

  migrate:
    image: postgres:17.5-alpine3.20
    container_name: bigmeter_migrate
    profiles: ["setup"]
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PGHOST: postgres
      PGUSER: ${POSTGRES_USER:-postgres}
      PGPASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGDATABASE: ${POSTGRES_DB:-bigmeter}
      TZ: Asia/Bangkok
    volumes:
      - ./migrations:/migrations:ro
    command: ["sh", "-c", "set -e; for f in /migrations/*.sql; do echo Running $$f; psql -v ON_ERROR_STOP=1 -f $$f; done"]
    restart: "no"

  seed_branches:
    image: postgres:17.5-alpine3.20
    container_name: bigmeter_seed_branches
    profiles: ["setup"]
    depends_on:
      migrate:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
    environment:
      PGHOST: postgres
      PGUSER: ${POSTGRES_USER:-postgres}
      PGPASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGDATABASE: ${POSTGRES_DB:-bigmeter}
      TZ: Asia/Bangkok
    volumes:
      - ./docs:/seed:ro
    command:
      - sh
      - -c
      - |
          set -e
          psql -v ON_ERROR_STOP=1 <<'SQL'
          CREATE TEMP TABLE IF NOT EXISTS _seed_b (
            ba_code text, branch_code text, ba_code_dup text, name text, region_id text, region_code text
          );
          \copy _seed_b FROM '/seed/r6_branches.csv' CSV HEADER;
          INSERT INTO bm_branches (code, name)
          SELECT DISTINCT TRIM(ba_code), TRIM(name) FROM _seed_b
          ON CONFLICT (code) DO UPDATE SET name=EXCLUDED.name;
          SQL
    restart: "no"

  api:
    build:
      context: .
      dockerfile: docker/Dockerfile.api
    container_name: bigmeter_api
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # Compose a DSN using the local Postgres service
      POSTGRES_DSN: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-bigmeter}?sslmode=disable
      TIMEZONE: ${TIMEZONE:-Asia/Bangkok}
      # Optional: override via .env or configs/.env inside container if you bind-mount
      BRANCHES: ${BRANCHES:-}
      PORT: ${PORT:-8089}
    ports:
      - "8089:8089"
    restart: unless-stopped

  sync:
    build:
      context: .
      dockerfile: docker/Dockerfile.sync-thick
    container_name: bigmeter_sync
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      ORACLE_DSN: ${ORACLE_DSN:-}
      POSTGRES_DSN: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-bigmeter}?sslmode=disable
      TIMEZONE: ${TIMEZONE:-Asia/Bangkok}
      BRANCHES: ${BRANCHES:-}
      MODE: ${MODE:-}
    restart: unless-stopped

  frontend:
    build:
      context: ../big-meter-frontend
      dockerfile: Dockerfile
      args:
        VITE_API_BASE_URL: ""
        VITE_LOGIN_API: "https://intranet.pwa.co.th/login/webservice_login6.php"
    container_name: bigmeter_frontend
    depends_on:
      - api
    ports:
      - "3000:80"
    restart: unless-stopped

volumes:
  pgdata:
